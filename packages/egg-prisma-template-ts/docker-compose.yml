version: '3'
services:
  # mysql
  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    container_name: template_mysql
    restart: always
    networks: 
      - my_network
    ports:
      - 3306:3306
    volumes:
      - ./runtime_data/db:/var/lib/mysql
    environment:
      MYSQL_PASSWORD: my-secret-pw # 记得更改成自己的 tips: 与 .env 中 DATABASE_URL 相同
      MYSQL_ROOT_PASSWORD: my-secret-pw # 记得更改成自己的 tips: 与 .env 中 DATABASE_URL 相同
      MYSQL_DATABASE: node_template # 记得更改成自己的  tips:与 .env 中 DATABASE_URL 相同
  # redis
  redis:
    image: redis
    restart: always
    networks: 
      - my_network
    container_name: template_redis
    volumes:
      - ./runtime_data/redis/data:/data
      - ./config/redis/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    privileged: true # 使用该参数，container内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限
    ports:
      - 6379:6379
  # node 模板
  node-template:
    build: ./
    # 依赖于redis和mysql，在启动本服务之前会先启动依赖的服务
    depends_on:
      - mysql
      - redis
    networks: 
      - my_network
    ports:
      - 7001:7001
    container_name: template_node

networks:
  my_network:
